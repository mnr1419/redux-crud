{"ast":null,"code":"const intialState = {\n  products: []\n};\n\nconst ProductReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case \"ADD_PRODUCT\":\n      return {\n        products: state.products.concat([action.product])\n      };\n\n    case \"DELETE_PRODUCT\":\n      return {\n        products: state.products.filter(p => p.id !== action.id)\n      };\n\n    case \"EDIT_PRODUCT\":\n      return {\n        products: state.products.filter(product => product.id === action.id)\n      };\n    // case \"UPDATE_PRODUCT\":\n    //   return {\n    //     id: action.product.id,\n    //     name: action.product.name,\n    //     price: action.product.price,\n    //   };\n\n    case \"REPLACE_PRODUCT\":\n      //const product = action.product;\n      // return {\n      //   ...state,\n      //   products: state.products.map((p) =>\n      //     p.id === product.id ? product : p\n      //   ),\n      // };\n      console.log(\"action.product.id: \", action.product.id);\n      const myProducts = [];\n      state.products.map(product => {\n        if (product.id === action.product.id) {\n          const updatedProduct = { ...product,\n            name: action.product.name,\n            price: action.product.price\n          };\n          myProducts.push(updatedProduct);\n        } else {\n          myProducts.push(product);\n        }\n      });\n      console.log(\"myProducts: \", myProducts);\n      return { ...state,\n        products: myProducts\n      };\n    // let products = state.products.map((p) => {\n    //   if (p.id === action.product.id) {\n    //     return {\n    //       ...p,\n    //       name: action.product.name,\n    //       price: action.product.price,\n    //     };\n    //   } else {\n    //     return products;\n    //   }\n    // });\n    // return {\n    //   products: products,\n    // };\n\n    default:\n      return state;\n  }\n};\n\nexport default ProductReducer;","map":{"version":3,"sources":["F:/ReactReduxEample/redux-crud/src/reducers/productreducer.jsx"],"names":["intialState","products","ProductReducer","state","action","type","concat","product","filter","p","id","console","log","myProducts","map","updatedProduct","name","price","push"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE;AADQ,CAApB;;AAIA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,WAAT,EAAsBI,MAAtB,KAAiC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO;AACLJ,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeK,MAAf,CAAsB,CAACF,MAAM,CAACG,OAAR,CAAtB;AADL,OAAP;;AAGF,SAAK,gBAAL;AACE,aAAO;AACLN,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeO,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAA7C;AADL,OAAP;;AAGF,SAAK,cAAL;AACE,aAAO;AACLT,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeO,MAAf,CAAuBD,OAAD,IAAaA,OAAO,CAACG,EAAR,KAAeN,MAAM,CAACM,EAAzD;AADL,OAAP;AAGF;AACA;AACA;AACA;AACA;AACA;;AACA,SAAK,iBAAL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCR,MAAM,CAACG,OAAP,CAAeG,EAAlD;AACA,YAAMG,UAAU,GAAG,EAAnB;AACAV,MAAAA,KAAK,CAACF,QAAN,CAAea,GAAf,CAAoBP,OAAD,IAAa;AAC9B,YAAIA,OAAO,CAACG,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAAlC,EAAsC;AACpC,gBAAMK,cAAc,GAAG,EACrB,GAAGR,OADkB;AAErBS,YAAAA,IAAI,EAAEZ,MAAM,CAACG,OAAP,CAAeS,IAFA;AAGrBC,YAAAA,KAAK,EAAEb,MAAM,CAACG,OAAP,CAAeU;AAHD,WAAvB;AAKAJ,UAAAA,UAAU,CAACK,IAAX,CAAgBH,cAAhB;AACD,SAPD,MAOO;AACLF,UAAAA,UAAU,CAACK,IAAX,CAAgBX,OAAhB;AACD;AACF,OAXD;AAYAI,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,UAA5B;AACA,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,QAAQ,EAAEY;AAFL,OAAP;AAKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE,aAAOV,KAAP;AA/DJ;AAiED,CAlED;;AAmEA,eAAeD,cAAf","sourcesContent":["const intialState = {\r\n  products: [],\r\n};\r\n\r\nconst ProductReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_PRODUCT\":\r\n      return {\r\n        products: state.products.concat([action.product]),\r\n      };\r\n    case \"DELETE_PRODUCT\":\r\n      return {\r\n        products: state.products.filter((p) => p.id !== action.id),\r\n      };\r\n    case \"EDIT_PRODUCT\":\r\n      return {\r\n        products: state.products.filter((product) => product.id === action.id),\r\n      };\r\n    // case \"UPDATE_PRODUCT\":\r\n    //   return {\r\n    //     id: action.product.id,\r\n    //     name: action.product.name,\r\n    //     price: action.product.price,\r\n    //   };\r\n    case \"REPLACE_PRODUCT\":\r\n      //const product = action.product;\r\n      // return {\r\n      //   ...state,\r\n      //   products: state.products.map((p) =>\r\n      //     p.id === product.id ? product : p\r\n      //   ),\r\n      // };\r\n      console.log(\"action.product.id: \", action.product.id);\r\n      const myProducts = [];\r\n      state.products.map((product) => {\r\n        if (product.id === action.product.id) {\r\n          const updatedProduct = {\r\n            ...product,\r\n            name: action.product.name,\r\n            price: action.product.price,\r\n          };\r\n          myProducts.push(updatedProduct);\r\n        } else {\r\n          myProducts.push(product);\r\n        }\r\n      });\r\n      console.log(\"myProducts: \", myProducts);\r\n      return {\r\n        ...state,\r\n        products: myProducts,\r\n      };\r\n\r\n    // let products = state.products.map((p) => {\r\n    //   if (p.id === action.product.id) {\r\n    //     return {\r\n    //       ...p,\r\n    //       name: action.product.name,\r\n    //       price: action.product.price,\r\n    //     };\r\n    //   } else {\r\n    //     return products;\r\n    //   }\r\n    // });\r\n    // return {\r\n    //   products: products,\r\n    // };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default ProductReducer;\r\n"]},"metadata":{},"sourceType":"module"}