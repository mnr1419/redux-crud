{"ast":null,"code":"const intialState = {\n  products: []\n};\n\nconst ProductReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case \"ADD_PRODUCT\":\n      return {\n        products: state.products.concat([action.product])\n      };\n\n    case \"DELETE_PRODUCT\":\n      return {\n        products: state.products.filter(p => p.id !== action.id)\n      };\n\n    case \"EDIT_PRODUCT\":\n      return {\n        products: state.products.filter(product => product.id === action.id)\n      };\n    // case \"UPDATE_PRODUCT\":\n    //   return {\n    //     id: action.product.id,\n    //     name: action.product.name,\n    //     price: action.product.price,\n    //   };\n\n    case \"REPLACE_PRODUCT\":\n      //const product = action.product;\n      // return {\n      //   ...state,\n      //   products: state.products.map((p) =>\n      //     p.id === product.id ? product : p\n      //   ),\n      // };\n      console.log(\"action.product.id: \", action.product.id);\n      return { ...state,\n        products: state.products.map(product => {\n          if (product.id !== action.product.id) {\n            return product;\n          } else {\n            return {\n              id: action.product.id,\n              name: action.product.name,\n              price: action.product.price,\n              ...state.products\n            };\n          }\n        })\n      };\n    // let products = state.products.map((p) => {\n    //   if (p.id === action.product.id) {\n    //     return {\n    //       ...p,\n    //       name: action.product.name,\n    //       price: action.product.price,\n    //     };\n    //   } else {\n    //     return products;\n    //   }\n    // });\n    // return {\n    //   products: products,\n    // };\n\n    default:\n      return state;\n  }\n};\n\nexport default ProductReducer;","map":{"version":3,"sources":["F:/ReactReduxEample/redux-crud/src/reducers/productreducer.jsx"],"names":["intialState","products","ProductReducer","state","action","type","concat","product","filter","p","id","console","log","map","name","price"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE;AADQ,CAApB;;AAIA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,WAAT,EAAsBI,MAAtB,KAAiC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO;AACLJ,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeK,MAAf,CAAsB,CAACF,MAAM,CAACG,OAAR,CAAtB;AADL,OAAP;;AAGF,SAAK,gBAAL;AACE,aAAO;AACLN,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeO,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAA7C;AADL,OAAP;;AAGF,SAAK,cAAL;AACE,aAAO;AACLT,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeO,MAAf,CAAuBD,OAAD,IAAaA,OAAO,CAACG,EAAR,KAAeN,MAAM,CAACM,EAAzD;AADL,OAAP;AAGF;AACA;AACA;AACA;AACA;AACA;;AACA,SAAK,iBAAL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCR,MAAM,CAACG,OAAP,CAAeG,EAAlD;AACA,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeY,GAAf,CAAoBN,OAAD,IAAa;AACxC,cAAIA,OAAO,CAACG,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAAlC,EAAsC;AACpC,mBAAOH,OAAP;AACD,WAFD,MAEO;AACL,mBAAO;AACLG,cAAAA,EAAE,EAAEN,MAAM,CAACG,OAAP,CAAeG,EADd;AAELI,cAAAA,IAAI,EAAEV,MAAM,CAACG,OAAP,CAAeO,IAFhB;AAGLC,cAAAA,KAAK,EAAEX,MAAM,CAACG,OAAP,CAAeQ,KAHjB;AAIL,iBAAGZ,KAAK,CAACF;AAJJ,aAAP;AAMD;AACF,SAXS;AAFL,OAAP;AAgBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE,aAAOE,KAAP;AA5DJ;AA8DD,CA/DD;;AAgEA,eAAeD,cAAf","sourcesContent":["const intialState = {\r\n  products: [],\r\n};\r\n\r\nconst ProductReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_PRODUCT\":\r\n      return {\r\n        products: state.products.concat([action.product]),\r\n      };\r\n    case \"DELETE_PRODUCT\":\r\n      return {\r\n        products: state.products.filter((p) => p.id !== action.id),\r\n      };\r\n    case \"EDIT_PRODUCT\":\r\n      return {\r\n        products: state.products.filter((product) => product.id === action.id),\r\n      };\r\n    // case \"UPDATE_PRODUCT\":\r\n    //   return {\r\n    //     id: action.product.id,\r\n    //     name: action.product.name,\r\n    //     price: action.product.price,\r\n    //   };\r\n    case \"REPLACE_PRODUCT\":\r\n      //const product = action.product;\r\n      // return {\r\n      //   ...state,\r\n      //   products: state.products.map((p) =>\r\n      //     p.id === product.id ? product : p\r\n      //   ),\r\n      // };\r\n      console.log(\"action.product.id: \", action.product.id);\r\n      return {\r\n        ...state,\r\n        products: state.products.map((product) => {\r\n          if (product.id !== action.product.id) {\r\n            return product;\r\n          } else {\r\n            return {\r\n              id: action.product.id,\r\n              name: action.product.name,\r\n              price: action.product.price,\r\n              ...state.products,\r\n            };\r\n          }\r\n        }),\r\n      };\r\n\r\n    // let products = state.products.map((p) => {\r\n    //   if (p.id === action.product.id) {\r\n    //     return {\r\n    //       ...p,\r\n    //       name: action.product.name,\r\n    //       price: action.product.price,\r\n    //     };\r\n    //   } else {\r\n    //     return products;\r\n    //   }\r\n    // });\r\n    // return {\r\n    //   products: products,\r\n    // };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default ProductReducer;\r\n"]},"metadata":{},"sourceType":"module"}